{"version":3,"file":"115.13454d66d829bc43.js","mappings":"6OAYEA,kBAGCA,SAA2BA,8BAA3BA,yCCVH,MAAMC,EAAiB,CACrB,CACEC,KAAM,GACNC,UCKJ,MAAM,MAAOC,EAYXC,YACmBC,EACAC,GADAC,WACAA,sBAVFA,qBAAkB,CACjC,OACA,MACA,OACA,UACA,aAME,CAEEC,eAAY,qCAGhB,KAAM,mBAAoBC,EAAKH,eAAeI,cAG5C,OAFAD,EAAKE,sBAAwB,8DAC7BF,EAAKJ,IAAIO,eAIX,IAGE,MAAMC,QAFiB,IAAIC,eAAeL,EAAKM,oBAAqBN,EAAKO,qBAE5BC,OAG7CC,WAAW,KACTL,EAAgBM,SAAS,WACzBV,EAAKE,sBAAwB,uCAC7BF,EAAKJ,IAAIO,cAAT,EACC,IAIJ,CAHA,MAAQQ,GACPX,EAAKE,uBAA0BS,GAAmB,IAAIC,WACtDZ,EAAKJ,IAAIO,cACV,CAvBe,IAwBjB,CAEOG,oBACN,MAAO,CACL,CACEO,iBAAkB,aAClBC,KAAM,CACJC,kBAAmBjB,KAAKkB,kBAG5B,CACEH,iBAAkB,8BAClBC,KAAM,CACFG,QAAS,EACTF,kBAAmBjB,KAAKkB,gBACxBE,YAAa,KACbC,mBAAoB,0BACpBC,qBAAsB,CAAC,gBAAiB,iBAAkB,iBAInE,CAEOb,oBACN,MAAO,CACLc,MAAO,CACLC,MAAO,WACPC,OAAQ,CAAEC,SAAU,MAAOC,MAAO,UAEpCC,aAAc,CACZ,CACEJ,MAAO,2BACPC,OAAQ,CAAEC,SAAU,MAAOC,MAAO,UAEpC,CACEH,MAAO,8BACPC,OAAQ,CAAEC,SAAU,MAAOC,MAAO,WAIzC,+CAjFU/B,GAAiBJ,kDAAjBI,EAAiBiC,2zBFb9BrC,cAAIA,oBAAQA,QAEZA,qBAAsB,QAChBA,kCAAsBA,QAE1BA,oBAIEA,gCAASsC,gBAAc,GACxBtC,2BAAeA,QAEhBA,uBAIFA,QAEAA,kBAAmB,QACbA,gCAAmBA,QAEvBA,kBAAoC,WAApCA,CAAoC,oBAApCA,CAAoC,gBAGnBA,yBAAYA,QACvBA,oBAMFA,UAGFA,kBAA6B,oBAA7BA,CAA6B,gBAEdA,wBAAWA,QACtBA,oBAQFA,YAIJA,kBAAoC,WAApCA,CAAoC,oBAApCA,CAAoC,gBAGnBA,wBAAWA,QACtBA,oBASFA,UAGFA,kBAA6B,oBAA7BA,CAA6B,gBAEdA,0BAAaA,QACxBA,oBASFA,YAIJA,sBAICA,wBAAWA,iBAxETA,+GEAQI,CAAb,ODGO,IAAMmC,EAAb,MAAM,MAAOA,kDAAqB,0BAArBA,gCAHDC,cAAsBvC,GACtBuC,QAECD,CAAb,KEGaE,EAAb,MAAM,MAAOA,kDAAc,0BAAdA,gCAPTC,KACAC,IACAC,KACAC,KACAN,KAGSE,CAAb","names":["i0","routes","path","component","PaymentsComponent","constructor","cdr","platformShield","this","makeDonation","_this","nativeWindow","donationStatusMessage","markForCheck","paymentResponse","PaymentRequest","getPaymentMethods","getPaymentDetails","show","setTimeout","complete","error","toString","supportedMethods","data","supportedNetworks","paymentNetworks","version","countryCode","merchantIdentifier","merchantCapabilities","total","label","amount","currency","value","displayItems","selectors","ctx","PaymentsRoutingModule","RouterModule","PaymentsModule","CommonModule","MatInputModule","MatButtonModule","MatFormFieldModule"],"sourceRoot":"webpack:///","sources":["./libs/demo/src/lib/payments/payments.component.html","./libs/demo/src/lib/payments/payments-routing.module.ts","./libs/demo/src/lib/payments/payments.component.ts","./libs/demo/src/lib/payments/payments.module.ts"],"sourcesContent":["<h2>Payments</h2>\n\n<section class=\"mb-5\">\n  <h3>Payment request dialog</h3>\n\n  <button\n    type=\"button\"\n    mat-raised-button\n    color=\"primary\"\n    (click)=\"makeDonation()\"\n  >Make a donation</button>\n\n  <div\n    *ngIf=\"!!donationStatusMessage\"\n    class=\"mt-2\"\n  >{{ donationStatusMessage }}</div> \n</section>\n\n<form class=\"mb-3\">\n  <h3>Credit card payment</h3>\n\n  <div class=\"d-flex flex-wrap gap-2\">\n    <div class=\"overflow-hidden\">\n      <mat-form-field>\n        <mat-label>Name on card</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          name=\"name\"\n          autocomplete=\"cc-name\"\n        >\n      </mat-form-field>\n    </div>\n\n    <div class=\"overflow-hidden\">\n      <mat-form-field>\n        <mat-label>Card number</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          pattern=\"[0-9]+\"\n          name=\"card-number\"\n          inputmode=\"numeric\"\n          autocomplete=\"cc-number\"\n        >\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div class=\"d-flex flex-wrap gap-2\">\n    <div class=\"overflow-hidden\">\n      <mat-form-field>\n        <mat-label>Expiry date</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          name=\"expiry-date\"\n          autocomplete=\"cc-exp\"\n          placeholder=\"MM/YY\"\n          minlength=\"4\"\n          pattern=\"[0-9/]+\"\n        >\n      </mat-form-field>\n    </div>\n\n    <div class=\"overflow-hidden\">\n      <mat-form-field>\n        <mat-label>Security code</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          name=\"security-code\"\n          inputmode=\"numeric\"\n          minlength=\"3\"\n          maxlength=\"4\"\n          pattern=\"[0-9]+\"\n        >\n      </mat-form-field>\n    </div>\n  </div>\n\n  <button\n    type=\"button\"\n    mat-raised-button\n    color=\"primary\"\n  >Pay $300.00</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PaymentsComponent } from './payments.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentsComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentsRoutingModule {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\n\nimport { PlatformShieldService } from '@playground/shared';\n\n@Component({\n  selector: 'playground-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'full-size p-3 overflow-auto'\n  },\n})\nexport class PaymentsComponent {\n\n  donationStatusMessage: string | undefined;\n\n  private readonly paymentNetworks = [\n    'amex',\n    'jcb',\n    'visa',\n    'maestro',\n    'mastercard',\n  ];\n\n  constructor(\n    private readonly cdr: ChangeDetectorRef,\n    private readonly platformShield: PlatformShieldService,\n  ) {}\n\n  async makeDonation(): Promise<void> {\n    // https://whatwebcando.today/payments.html\n    // https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/PaymentRequest\n    if (!('PaymentRequest' in this.platformShield.nativeWindow)) {\n      this.donationStatusMessage = 'Your browser/device does not support Web Payments API.';\n      this.cdr.markForCheck();\n      return;\n    }\n\n    try {\n      const paymentRequest = new PaymentRequest(this.getPaymentMethods(), this.getPaymentDetails());\n\n      const paymentResponse = await paymentRequest.show();\n\n      // Emulate payment sending to the server.\n      setTimeout(() => {\n        paymentResponse.complete('success');\n        this.donationStatusMessage = 'Your donation was sent successfully.';\n        this.cdr.markForCheck();\n      }, 1000);\n    } catch (error) {\n      this.donationStatusMessage = ((error as Error) || '').toString();\n      this.cdr.markForCheck();\n    }\n  }\n\n  private getPaymentMethods(): PaymentMethodData[] {\n    return [\n      {\n        supportedMethods: 'basic-card', // Note that this method is deprecated and its support will be removed.\n        data: {\n          supportedNetworks: this.paymentNetworks, \n        }\n      },\n      {\n        supportedMethods: 'https://apple.com/apple-pay',\n        data: {\n            version: 2,\n            supportedNetworks: this.paymentNetworks,\n            countryCode: 'UK',\n            merchantIdentifier: 'viatcheslav-zadorozhniy',\n            merchantCapabilities: ['supportsDebit', 'supportsCredit', 'supports3DS']\n        }\n      },\n    ];\n  }\n\n  private getPaymentDetails(): PaymentDetailsInit {\n    return {\n      total: {\n        label: 'Donation',\n        amount: { currency: 'USD', value: '10.00' },\n      },\n      displayItems: [\n        {\n          label: 'Original donation amount',\n          amount: { currency: 'USD', value: '15.00' },\n        },\n        {\n          label: 'Friends and family discount',\n          amount: { currency: 'USD', value: '-5.00' },\n        },\n      ]\n    };\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { PaymentsRoutingModule } from './payments-routing.module';\nimport { PaymentsComponent } from './payments.component';\n\n@NgModule({\n  declarations: [PaymentsComponent],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    PaymentsRoutingModule,\n  ],\n})\nexport class PaymentsModule {}\n"],"x_google_ignoreList":[]}